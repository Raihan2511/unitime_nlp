{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Professor Lee cannot teach on Fridays and prefers not to teach before 10 AM", "output": {"constraints": [{"constraint_id": "c1", "type": "time_prohibition", "entity_type": "instructor", "entity_name": "Professor Lee", "entity_id": null, "temporal_constraint": {"day": "Friday", "day_code": 5, "time_start": null, "time_end": null, "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}, "preference_level": "P", "preference_code": -2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('P')", "day_code": 5, "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "owner_id": "get_instructor_id('Professor Lee')", "owner_type": 1}, "confidence": 0.98, "reasoning": "Strong prohibition indicated by 'cannot'"}, {"constraint_id": "c2", "type": "time_preference", "entity_type": "instructor", "entity_name": "Professor Lee", "entity_id": null, "temporal_constraint": {"time_start": "10:00", "time_end": "18:00", "period": "late_morning_onwards", "time_pattern": "000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}, "preference_level": "D", "preference_code": -1, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('D')", "day_code": null, "time_pattern": "000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "owner_id": "get_instructor_id('Professor Lee')", "owner_type": 1}, "confidence": 0.88, "reasoning": "Soft preference indicated by 'prefers not to'"}], "metadata": {"input_complexity": "mixed_prohibition_preference", "constraint_count": 2, "parsing_confidence": 0.93, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "ART 150 studio classes need natural lighting and must be scheduled during daylight hours only", "output": {"constraints": [{"constraint_id": "c1", "type": "room_feature", "entity_type": "course", "course_name": "ART 150", "entity_id": null, "room_constraint": {"features_required": ["natural_lighting", "studio_space"], "room_type": "art_studio", "lighting_requirement": "daylight"}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_feature_id": "get_room_feature('natural_lighting')", "room_type_id": "get_room_type('art_studio')", "owner_id": "get_class_id('ART 150')", "owner_type": 0}, "confidence": 0.99, "reasoning": "Essential lighting requirement for art instruction"}, {"constraint_id": "c2", "type": "time_restriction", "entity_type": "course", "course_name": "ART 150", "entity_id": null, "temporal_constraint": {"period": "daylight_hours", "time_start": "08:00", "time_end": "17:00", "seasonal_adjustment": true}, "preference_level": "R", "preference_code": -4, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000", "owner_id": "get_class_id('ART 150')", "owner_type": 0}, "confidence": 0.96, "reasoning": "Natural lighting dependency requires daylight scheduling"}], "metadata": {"input_complexity": "combined_room_time_constraint", "constraint_count": 2, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Dr. Patel teaches both undergraduate and graduate versions of the same course and they must not conflict", "output": {"constraints": [{"constraint_id": "c1", "type": "instructor_conflict", "entity_type": "instructor", "entity_name": "Dr. Patel", "entity_id": null, "distribution_constraint": {"constraint_type": "DIFF_TIME", "applies_to": "instructor_courses", "course_variants": ["undergraduate", "graduate"], "same_subject": true}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('DIFF_TIME')", "structure": "All Classes", "owner_id": "get_instructor_id('Dr. Patel')", "owner_type": 1}, "confidence": 0.97, "reasoning": "Instructor cannot teach conflicting course versions simultaneously"}], "metadata": {"input_complexity": "instructor_course_variant_conflict", "constraint_count": 1, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "SPAN 201 conversation groups should be limited to 15 students maximum and held in small seminar rooms", "output": {"constraints": [{"constraint_id": "c1", "type": "enrollment_limit", "entity_type": "course", "course_name": "SPAN 201", "entity_id": null, "enrollment_constraint": {"max_enrollment": 15, "constraint_type": "HARD_CAP", "pedagogical_reason": "conversation_practice"}, "preference_level": "R", "preference_code": -4, "database_table": "CLASS_LIMIT", "database_fields": {"class_id": "get_class_id('SPAN 201')", "room_ratio": 1.0, "number_of_rooms": 1, "manager_id": "get_department_id('Languages')", "max_limit": 15}, "confidence": 0.99, "reasoning": "Pedagogical requirement for language conversation practice"}, {"constraint_id": "c2", "type": "room_size", "entity_type": "course", "course_name": "SPAN 201", "entity_id": null, "room_constraint": {"room_type": "seminar_room", "room_size": "small", "maximum_capacity": 20}, "preference_level": "F", "preference_code": 2, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "room_type_id": "get_room_type('seminar_room')", "max_capacity": 20, "owner_id": "get_class_id('SPAN 201')", "owner_type": 0}, "confidence": 0.95, "reasoning": "Small room preference for intimate language learning"}], "metadata": {"input_complexity": "enrollment_room_constraint", "constraint_count": 2, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "No more than two sections of ECON 101 can be scheduled at the same time to distribute teaching assistant workload", "output": {"constraints": [{"constraint_id": "c1", "type": "concurrent_limit", "entity_type": "course_sections", "course_name": "ECON 101", "entity_id": null, "distribution_constraint": {"constraint_type": "MAX_CONCURRENT", "max_simultaneous": 2, "resource_constraint": "teaching_assistant_availability"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('MAX_CONCURRENT')", "structure": "At Most 2", "owner_id": "get_course_offering_id('ECON 101')", "owner_type": 3}, "confidence": 0.96, "reasoning": "Resource limitation based on TA availability"}], "metadata": {"input_complexity": "concurrent_sections_limit", "constraint_count": 1, "parsing_confidence": 0.96, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Prof. Garcia needs a 2-hour break for lunch between 12 PM and 2 PM on teaching days", "output": {"constraints": [{"constraint_id": "c1", "type": "instructor_break", "entity_type": "instructor", "entity_name": "Prof. Garcia", "entity_id": null, "temporal_constraint": {"break_type": "lunch", "time_start": "12:00", "time_end": "14:00", "duration_minutes": 120, "required_on": "teaching_days"}, "preference_level": "F", "preference_code": 2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "time_pattern": "000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111", "owner_id": "get_instructor_id('Prof. Garcia')", "owner_type": 1}, "confidence": 0.94, "reasoning": "Personal schedule accommodation for meal break"}], "metadata": {"input_complexity": "instructor_break_requirement", "constraint_count": 1, "parsing_confidence": 0.94, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Medical school lectures and labs must maintain a 3:1 ratio and be coordinated within the same week", "output": {"constraints": [{"constraint_id": "c1", "type": "course_ratio", "entity_type": "course_pair", "primary_course": "Medical Lectures", "secondary_course": "Medical Labs", "distribution_constraint": {"constraint_type": "LECTURE_LAB_RATIO", "ratio": "3:1", "time_coordination": "same_week"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('SAME_WEEK')", "structure": "3:1 Ratio", "owner_id": "get_department_id('Medical School')", "owner_type": 2}, "confidence": 0.98, "reasoning": "Curricular requirement for medical education structure"}], "metadata": {"input_complexity": "course_ratio_coordination", "constraint_count": 1, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "International students' ESL classes should avoid conflicts with mandatory orientation sessions on Mondays at 9 AM", "output": {"constraints": [{"constraint_id": "c1", "type": "student_schedule_conflict", "entity_type": "student_group", "group_name": "International Students", "primary_course": "ESL Classes", "conflicting_event": "Orientation Sessions", "temporal_constraint": {"conflict_day": "Monday", "conflict_time": "09:00", "avoid_overlap": true}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('DIFF_TIME')", "structure": "All Classes", "owner_id": "get_student_group_id('International Students')", "owner_type": 4}, "confidence": 0.95, "reasoning": "Mandatory event conflict avoidance for student group"}], "metadata": {"input_complexity": "student_group_event_conflict", "constraint_count": 1, "parsing_confidence": 0.95, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Nursing simulation lab requires specialized mannequins and can only accommodate 8 students per session", "output": {"constraints": [{"constraint_id": "c1", "type": "specialized_equipment", "entity_type": "course", "course_name": "Nursing Simulation Lab", "entity_id": null, "room_constraint": {"equipment_required": ["medical_mannequins", "simulation_equipment"], "room_type": "simulation_lab", "specialized_features": ["medical_simulation"]}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_feature_id": "get_room_feature('medical_simulation')", "room_type_id": "get_room_type('simulation_lab')", "owner_id": "get_class_id('Nursing Simulation Lab')", "owner_type": 0}, "confidence": 0.99, "reasoning": "Specialized medical equipment requirement"}, {"constraint_id": "c2", "type": "session_capacity", "entity_type": "course", "course_name": "Nursing Simulation Lab", "entity_id": null, "enrollment_constraint": {"max_per_session": 8, "equipment_limitation": true, "safety_requirement": true}, "preference_level": "R", "preference_code": -4, "database_table": "CLASS_LIMIT", "database_fields": {"class_id": "get_class_id('Nursing Simulation Lab')", "max_limit": 8, "room_ratio": 1.0, "manager_id": "get_department_id('Nursing')"}, "confidence": 0.99, "reasoning": "Equipment and safety-based capacity limitation"}], "metadata": {"input_complexity": "specialized_lab_constraints", "constraint_count": 2, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Part-time faculty Dr. Chen is only available Tuesdays, Wednesdays, and Thursdays from 1 PM to 6 PM", "output": {"constraints": [{"constraint_id": "c1", "type": "availability_window", "entity_type": "instructor", "entity_name": "Dr. Chen", "entity_id": null, "temporal_constraint": {"available_days": ["Tuesday", "Wednesday", "Thursday"], "day_codes": [2, 3, 4], "time_start": "13:00", "time_end": "18:00", "employment_type": "part_time"}, "preference_level": "R", "preference_code": -4, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "day_code": 2, "time_pattern": "000000000000000000000000000111111111111111111111111100000000000000000000000000000000000000000000", "owner_id": "get_instructor_id('Dr. Chen')", "owner_type": 1}, "confidence": 0.99, "reasoning": "Strict availability constraint for part-time faculty"}, {"constraint_id": "c2", "type": "availability_window", "entity_type": "instructor", "entity_name": "Dr. Chen", "entity_id": null, "temporal_constraint": {"day": "Wednesday", "day_code": 3, "time_start": "13:00", "time_end": "18:00"}, "preference_level": "R", "preference_code": -4, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "day_code": 3, "time_pattern": "000000000000000000000000000111111111111111111111111100000000000000000000000000000000000000000000", "owner_id": "get_instructor_id('Dr. Chen')", "owner_type": 1}, "confidence": 0.99, "reasoning": "Strict availability constraint for part-time faculty"}, {"constraint_id": "c3", "type": "availability_window", "entity_type": "instructor", "entity_name": "Dr. Chen", "entity_id": null, "temporal_constraint": {"day": "Thursday", "day_code": 4, "time_start": "13:00", "time_end": "18:00"}, "preference_level": "R", "preference_code": -4, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "day_code": 4, "time_pattern": "000000000000000000000000000111111111111111111111111100000000000000000000000000000000000000000000", "owner_id": "get_instructor_id('Dr. Chen')", "owner_type": 1}, "confidence": 0.99, "reasoning": "Strict availability constraint for part-time faculty"}], "metadata": {"input_complexity": "multi_day_availability_window", "constraint_count": 3, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 3}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "PHIL 400 honors seminar requires round table discussion setup and enrollment limited to 12 students maximum", "output": {"constraints": [{"constraint_id": "c1", "type": "room_configuration", "entity_type": "course", "course_name": "PHIL 400", "entity_id": null, "room_constraint": {"seating_arrangement": "round_table", "room_type": "seminar_room", "discussion_focused": true}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_feature_id": "get_room_feature('round_table')", "room_type_id": "get_room_type('seminar_room')", "owner_id": "get_class_id('PHIL 400')", "owner_type": 0}, "confidence": 0.98, "reasoning": "Pedagogical requirement for philosophy discussion format"}, {"constraint_id": "c2", "type": "honors_enrollment", "entity_type": "course", "course_name": "PHIL 400", "entity_id": null, "enrollment_constraint": {"max_enrollment": 12, "course_level": "honors", "discussion_based": true}, "preference_level": "R", "preference_code": -4, "database_table": "CLASS_LIMIT", "database_fields": {"class_id": "get_class_id('PHIL 400')", "max_limit": 12, "manager_id": "get_department_id('Philosophy')"}, "confidence": 0.99, "reasoning": "Honors seminar size limitation for effective discussion"}], "metadata": {"input_complexity": "honors_seminar_constraints", "constraint_count": 2, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Graduate Teaching Assistants cannot be scheduled for more than 20 hours per week total across all assignments", "output": {"constraints": [{"constraint_id": "c1", "type": "workload_limit", "entity_type": "instructor_group", "group_name": "Graduate Teaching Assistants", "entity_id": null, "load_constraint": {"max_hours_per_week": 20, "applies_to": "all_assignments", "constraint_type": "TOTAL_WORKLOAD", "employment_status": "graduate_assistant"}, "preference_level": "R", "preference_code": -4, "database_table": "INSTRUCTOR_ATTRIBUTE", "database_fields": {"instructor_group": "get_instructor_group('Graduate TAs')", "attribute_name": "maxWeeklyHours", "attribute_value": "20.0", "attribute_type": "workload_limit"}, "confidence": 0.98, "reasoning": "Regulatory and institutional workload limitation for graduate students"}], "metadata": {"input_complexity": "group_workload_constraint", "constraint_count": 1, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Online courses should be recorded and asynchronous components cannot conflict with synchronous meeting times", "output": {"constraints": [{"constraint_id": "c1", "type": "modality_constraint", "entity_type": "course_type", "course_type": "Online", "entity_id": null, "delivery_constraint": {"recording_required": true, "asynchronous_components": true, "synchronous_meetings": true, "no_conflict": true}, "preference_level": "R", "preference_code": -4, "database_table": "CLASS_ATTRIBUTE", "database_fields": {"class_type": "online", "attribute_name": "recording_required", "attribute_value": "true", "delivery_mode": "hybrid_async_sync"}, "confidence": 0.91, "reasoning": "Online delivery format requirements and conflict avoidance"}], "metadata": {"input_complexity": "online_delivery_constraints", "constraint_count": 1, "parsing_confidence": 0.91, "requires_disambiguation": true, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "MUSC 350 ensemble rehearsals need piano access and all members must be available at the same time", "output": {"constraints": [{"constraint_id": "c1", "type": "instrument_requirement", "entity_type": "course", "course_name": "MUSC 350", "entity_id": null, "room_constraint": {"instrument_required": ["piano"], "room_type": "music_room", "ensemble_space": true}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_feature_id": "get_room_feature('piano')", "room_type_id": "get_room_type('music_room')", "owner_id": "get_class_id('MUSC 350')", "owner_type": 0}, "confidence": 0.99, "reasoning": "Essential instrument requirement for ensemble music"}, {"constraint_id": "c2", "type": "group_synchronization", "entity_type": "course", "course_name": "MUSC 350", "entity_id": null, "distribution_constraint": {"constraint_type": "SAME_TIME", "applies_to": "all_enrolled_students", "synchronization_required": true}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('SAME_TIME')", "structure": "All Students", "owner_id": "get_class_id('MUSC 350')", "owner_type": 0}, "confidence": 0.99, "reasoning": "Ensemble requires all participants present simultaneously"}], "metadata": {"input_complexity": "ensemble_coordination_constraints", "constraint_count": 2, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Weekend intensive courses should be scheduled on consecutive Saturday-Sunday pairs with 6-hour sessions each day", "output": {"constraints": [{"constraint_id": "c1", "type": "weekend_intensive", "entity_type": "course_format", "course_format": "Weekend Intensive", "entity_id": null, "temporal_constraint": {"days": ["Saturday", "Sunday"], "day_codes": [6, 0], "consecutive_required": true, "session_duration_hours": 6, "format_type": "intensive"}, "preference_level": "R", "preference_code": -4, "database_table": "TIME_PATTERN", "database_fields": {"name": "Weekend Intensive", "days_combination": "SaSu", "mins_per_mtg": 360, "sessions_per_week": 2, "type": 2}, "confidence": 0.97, "reasoning": "Intensive format requirement for weekend delivery"}], "metadata": {"input_complexity": "intensive_format_constraint", "constraint_count": 1, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Study abroad preparation courses must be completed before international departure dates and cannot conflict with visa appointment schedules", "output": {"constraints": [{"constraint_id": "c1", "type": "deadline_constraint", "entity_type": "course_group", "course_group": "Study Abroad Preparation", "entity_id": null, "temporal_constraint": {"completion_deadline": "departure_date", "external_dependency": "visa_appointments", "avoid_conflicts": true, "sequence_requirement": "before_departure"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('PRECEDENCE')", "structure": "Complete Before Deadline", "owner_id": "get_program_id('Study Abroad')", "owner_type": 8}, "confidence": 0.93, "reasoning": "External deadline and appointment conflict avoidance"}], "metadata": {"input_complexity": "external_deadline_constraint", "constraint_count": 1, "parsing_confidence": 0.93, "requires_disambiguation": true, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Cross-listed courses ANTH 280/SOCI 280 must have identical meeting times and share the same instructor", "output": {"constraints": [{"constraint_id": "c1", "type": "cross_listing", "entity_type": "course_pair", "primary_course": "ANTH 280", "secondary_course": "SOCI 280", "cross_listing_constraint": {"identical_times": true, "shared_instructor": true, "synchronized_scheduling": true}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('SAME_TIME')", "structure": "Cross Listed", "owner_id": "get_cross_listing_id('ANTH280_SOCI280')", "owner_type": 9}, "confidence": 0.99, "reasoning": "Cross-listing requires complete synchronization"}], "metadata": {"input_complexity": "cross_listing_constraint", "constraint_count": 1, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Student athletes have mandatory training sessions every Tuesday and Thursday from 3-5 PM that cannot be moved", "output": {"constraints": [{"constraint_id": "c1", "type": "student_group_commitment", "entity_type": "student_group", "group_name": "Student Athletes", "entity_id": null, "temporal_constraint": {"committed_times": [{"day": "Tuesday", "day_code": 2, "time_start": "15:00", "time_end": "17:00"}, {"day": "Thursday", "day_code": 4, "time_start": "15:00", "time_end": "17:00"}], "commitment_type": "mandatory_training", "immovable": true}, "preference_level": "P", "preference_code": -2, "database_table": "STUDENT_GROUP_RESERVATION", "database_fields": {"student_group_id": "get_student_group_id('Student Athletes')", "day_code": 2, "time_pattern": "000000000000000000000000000000000000000000000000000000001111111111111111111111000000000000000000", "reservation_type": "mandatory"}, "confidence": 0.98, "reasoning": "Non-negotiable athletic commitment scheduling"}, {"constraint_id": "c2", "type": "student_group_commitment", "entity_type": "student_group", "group_name": "Student Athletes", "entity_id": null, "temporal_constraint": {"day": "Thursday", "day_code": 4, "time_start": "15:00", "time_end": "17:00", "commitment_type": "mandatory_training"}, "preference_level": "P", "preference_code": -2, "database_table": "STUDENT_GROUP_RESERVATION", "database_fields": {"student_group_id": "get_student_group_id('Student Athletes')", "day_code": 4, "time_pattern": "000000000000000000000000000000000000000000000000000000001111111111111111111111000000000000000000", "reservation_type": "mandatory"}, "confidence": 0.98, "reasoning": "Non-negotiable athletic commitment scheduling"}], "metadata": {"input_complexity": "student_group_mandatory_commitment", "constraint_count": 2, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 2}}}