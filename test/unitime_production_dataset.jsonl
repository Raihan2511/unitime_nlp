{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Dr. Johnson cannot teach on Mondays and Wednesdays", "output": {"constraints": [{"constraint_id": "c1", "type": "time_prohibition", "entity_type": "instructor", "entity_name": "Dr. Johnson", "entity_id": null, "temporal_constraint": {"day": "Monday", "day_code": 1, "time_start": null, "time_end": null, "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}, "preference_level": "P", "preference_code": -2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('P')", "day_code": 1, "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "owner_id": "get_instructor_id('Dr. Johnson')", "owner_type": 1}, "confidence": 0.96, "reasoning": "Strong prohibition indicated by 'cannot'"}, {"constraint_id": "c2", "type": "time_prohibition", "entity_type": "instructor", "entity_name": "Dr. Johnson", "entity_id": null, "temporal_constraint": {"day": "Wednesday", "day_code": 3, "time_start": null, "time_end": null, "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}, "preference_level": "P", "preference_code": -2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('P')", "day_code": 3, "time_pattern": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "owner_id": "get_instructor_id('Dr. Johnson')", "owner_type": 1}, "confidence": 0.96, "reasoning": "Strong prohibition indicated by 'cannot'"}], "metadata": {"input_complexity": "multi_day_prohibition", "constraint_count": 2, "parsing_confidence": 0.96, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Professor Martinez prefers afternoon classes between 2 PM and 5 PM", "output": {"constraints": [{"constraint_id": "c1", "type": "time_preference", "entity_type": "instructor", "entity_name": "Professor Martinez", "entity_id": null, "temporal_constraint": {"day": null, "day_code": null, "time_start": "14:00", "time_end": "17:00", "period": "afternoon", "time_pattern": "000000000000000000000000000000111111111111111111111111000000000000000000000000000000000000000000"}, "preference_level": "F", "preference_code": 2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "day_code": null, "time_pattern": "000000000000000000000000000000111111111111111111111111000000000000000000000000000000000000000000", "owner_id": "get_instructor_id('Professor Martinez')", "owner_type": 1}, "confidence": 0.93, "reasoning": "Clear preference with specific time range"}], "metadata": {"input_complexity": "time_preference", "constraint_count": 1, "parsing_confidence": 0.93, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "All sections of MATH 101 must be scheduled on different days", "output": {"constraints": [{"constraint_id": "c1", "type": "different_days", "entity_type": "course_sections", "course_name": "MATH 101", "entity_id": null, "distribution_constraint": {"constraint_type": "DIFF_TIME", "applies_to": "all_sections", "scope": "course_offerings"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('DIFF_TIME')", "structure": "All Classes", "owner_id": "get_course_offering_id('MATH 101')", "owner_type": 3}, "confidence": 0.98, "reasoning": "Clear requirement for section separation"}], "metadata": {"input_complexity": "distribution_constraint", "constraint_count": 1, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "CS 201 lab must be scheduled after CS 201 lecture on the same day", "output": {"constraints": [{"constraint_id": "c1", "type": "precedence_constraint", "entity_type": "course_pair", "primary_course": "CS 201 Lecture", "secondary_course": "CS 201 Lab", "relationship": "precedence", "distribution_constraint": {"constraint_type": "PRECEDENCE", "same_day": true, "minimum_gap": 0, "structure": "Progressive"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('PRECEDENCE')", "structure": "Progressive", "owner_id": "get_course_offering_id('CS 201')", "owner_type": 3}, "confidence": 0.97, "reasoning": "Clear precedence requirement with same-day constraint"}], "metadata": {"input_complexity": "precedence_constraint", "constraint_count": 1, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Chemistry lab requires laboratory room with fume hoods", "output": {"constraints": [{"constraint_id": "c1", "type": "room_requirement", "entity_type": "course", "course_name": "Chemistry Lab", "entity_id": null, "room_constraint": {"room_type": "laboratory", "features_required": ["fume_hood"], "room_feature_type": "CHEMISTRY_LAB"}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_type_id": "get_room_type('laboratory')", "room_feature_id": "get_room_feature('fume_hood')", "owner_id": "get_class_id('Chemistry Lab')", "owner_type": 0}, "confidence": 0.99, "reasoning": "Safety requirement for chemistry equipment"}], "metadata": {"input_complexity": "room_requirement", "constraint_count": 1, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Dr. Williams cannot teach back-to-back classes and needs 30 minutes between courses", "output": {"constraints": [{"constraint_id": "c1", "type": "instructor_constraint", "entity_type": "instructor", "entity_name": "Dr. Williams", "entity_id": null, "distribution_constraint": {"constraint_type": "BTB_TIME", "minimum_gap_minutes": 30, "applies_to": "instructor_classes"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('BTB_TIME')", "structure": "At Most 1 Hour", "owner_id": "get_instructor_id('Dr. Williams')", "owner_type": 1}, "confidence": 0.95, "reasoning": "Clear constraint on consecutive class scheduling"}], "metadata": {"input_complexity": "instructor_gap_constraint", "constraint_count": 1, "parsing_confidence": 0.95, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Engineering students need PHYS 201 and MATH 301 in the same semester without conflicts", "output": {"constraints": [{"constraint_id": "c1", "type": "student_constraint", "entity_type": "student_group", "group_name": "Engineering", "courses": ["PHYS 201", "MATH 301"], "distribution_constraint": {"constraint_type": "SAME_STUDENTS", "conflict_type": "avoid_overlap", "structure": "Can Share Room"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('SAME_STUDENTS')", "structure": "Can Share Room", "owner_id": "get_student_group_id('Engineering')", "owner_type": 4}, "confidence": 0.94, "reasoning": "Student scheduling requirement to avoid conflicts"}], "metadata": {"input_complexity": "student_group_constraint", "constraint_count": 1, "parsing_confidence": 0.94, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Large lecture hall is required for HIST 100 with capacity of at least 200 students", "output": {"constraints": [{"constraint_id": "c1", "type": "room_capacity", "entity_type": "course", "course_name": "HIST 100", "entity_id": null, "room_constraint": {"room_type": "lecture_hall", "minimum_capacity": 200, "room_size": "large"}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_type_id": "get_room_type('lecture_hall')", "min_capacity": 200, "owner_id": "get_class_id('HIST 100')", "owner_type": 0}, "confidence": 0.98, "reasoning": "Capacity requirement based on enrollment"}], "metadata": {"input_complexity": "capacity_constraint", "constraint_count": 1, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Dr. Smith prefers teaching on Tuesdays and Thursdays in the morning", "output": {"constraints": [{"constraint_id": "c1", "type": "time_preference", "entity_type": "instructor", "entity_name": "Dr. Smith", "entity_id": null, "temporal_constraint": {"day": "Tuesday", "day_code": 2, "time_start": "08:00", "time_end": "12:00", "period": "morning", "time_pattern": "111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000"}, "preference_level": "F", "preference_code": 2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "day_code": 2, "time_pattern": "111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000", "owner_id": "get_instructor_id('Dr. Smith')", "owner_type": 1}, "confidence": 0.91, "reasoning": "Preference for specific days and time period"}, {"constraint_id": "c2", "type": "time_preference", "entity_type": "instructor", "entity_name": "Dr. Smith", "entity_id": null, "temporal_constraint": {"day": "Thursday", "day_code": 4, "time_start": "08:00", "time_end": "12:00", "period": "morning", "time_pattern": "111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000"}, "preference_level": "F", "preference_code": 2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "day_code": 4, "time_pattern": "111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000", "owner_id": "get_instructor_id('Dr. Smith')", "owner_type": 1}, "confidence": 0.91, "reasoning": "Preference for specific days and time period"}], "metadata": {"input_complexity": "multi_day_preference", "constraint_count": 2, "parsing_confidence": 0.91, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "All BIO 300 sections must use the same room type and be in the same building", "output": {"constraints": [{"constraint_id": "c1", "type": "same_room_type", "entity_type": "course_sections", "course_name": "BIO 300", "entity_id": null, "distribution_constraint": {"constraint_type": "SAME_ROOM", "applies_to": "all_sections", "room_requirement": "same_type"}, "preference_level": "F", "preference_code": 2, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "dist_type_id": "get_distribution_type('SAME_ROOM')", "structure": "All Classes", "owner_id": "get_course_offering_id('BIO 300')", "owner_type": 3}, "confidence": 0.93, "reasoning": "Consistency requirement for course sections"}, {"constraint_id": "c2", "type": "same_building", "entity_type": "course_sections", "course_name": "BIO 300", "entity_id": null, "distribution_constraint": {"constraint_type": "SAME_BUILDING", "applies_to": "all_sections"}, "preference_level": "F", "preference_code": 2, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "dist_type_id": "get_distribution_type('SAME_BUILDING')", "structure": "All Classes", "owner_id": "get_course_offering_id('BIO 300')", "owner_type": 3}, "confidence": 0.93, "reasoning": "Building consistency for sections"}], "metadata": {"input_complexity": "multi_constraint_sections", "constraint_count": 2, "parsing_confidence": 0.93, "requires_disambiguation": false, "database_operations": 2}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Evening classes must start after 6 PM and end before 10 PM", "output": {"constraints": [{"constraint_id": "c1", "type": "time_boundary", "entity_type": "time_pattern", "entity_name": "Evening Classes", "entity_id": null, "temporal_constraint": {"time_start": "18:00", "time_end": "22:00", "period": "evening", "time_pattern": "000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111110000"}, "preference_level": "R", "preference_code": -4, "database_table": "TIME_PATTERN", "database_fields": {"name": "Evening Classes", "mins_per_mtg": 180, "slots_per_mtg": 36, "time_pattern": "000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111110000", "type": 0, "visible": true}, "confidence": 0.96, "reasoning": "Clear time boundary definition for evening classes"}], "metadata": {"input_complexity": "time_pattern_definition", "constraint_count": 1, "parsing_confidence": 0.96, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Prof. Anderson cannot teach more than 3 courses per semester", "output": {"constraints": [{"constraint_id": "c1", "type": "teaching_load", "entity_type": "instructor", "entity_name": "Prof. Anderson", "entity_id": null, "load_constraint": {"max_courses": 3, "constraint_type": "MAX_TEACHING_LOAD", "applies_to": "semester"}, "preference_level": "R", "preference_code": -4, "database_table": "INSTRUCTOR_ATTRIBUTE", "database_fields": {"instructor_id": "get_instructor_id('Prof. Anderson')", "attribute_name": "maxLoad", "attribute_value": "3.0", "attribute_type": "teaching_load"}, "confidence": 0.97, "reasoning": "Clear teaching load limitation"}], "metadata": {"input_complexity": "load_constraint", "constraint_count": 1, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Statistics lab requires computer room with 30 workstations", "output": {"constraints": [{"constraint_id": "c1", "type": "room_equipment", "entity_type": "course", "course_name": "Statistics Lab", "entity_id": null, "room_constraint": {"room_type": "computer_lab", "equipment_required": ["computers", "workstations"], "minimum_stations": 30, "room_feature_type": "COMPUTER_LAB"}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_type_id": "get_room_type('computer_lab')", "room_feature_id": "get_room_feature('computer_stations')", "owner_id": "get_class_id('Statistics Lab')", "owner_type": 0}, "confidence": 0.99, "reasoning": "Specific equipment requirement for course functionality"}], "metadata": {"input_complexity": "equipment_requirement", "constraint_count": 1, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Freshman English sections cannot overlap with Math sections for the same students", "output": {"constraints": [{"constraint_id": "c1", "type": "student_conflict", "entity_type": "course_pair", "primary_course": "Freshman English", "secondary_course": "Math", "student_constraint": {"conflict_type": "avoid_overlap", "student_group": "freshmen", "constraint_type": "NO_CONFLICT"}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('SAME_STUDENTS')", "structure": "Can Share Room", "owner_id": "get_student_group_id('freshmen')", "owner_type": 4}, "confidence": 0.95, "reasoning": "Student conflict avoidance for required courses"}], "metadata": {"input_complexity": "student_conflict_constraint", "constraint_count": 1, "parsing_confidence": 0.95, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Saturday classes are discouraged but allowed if necessary", "output": {"constraints": [{"constraint_id": "c1", "type": "day_preference", "entity_type": "global", "entity_name": "Saturday Classes", "entity_id": null, "temporal_constraint": {"day": "Saturday", "day_code": 6, "availability": "discouraged"}, "preference_level": "D", "preference_code": -1, "database_table": "TIME_PATTERN", "database_fields": {"name": "Saturday Discouraged", "day_code": 6, "preference_level": "D", "mins_per_mtg": 50, "type": 0, "visible": true}, "confidence": 0.89, "reasoning": "Soft constraint expressing discouragement but not prohibition"}], "metadata": {"input_complexity": "soft_day_constraint", "constraint_count": 1, "parsing_confidence": 0.89, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Dr. Kim must teach CHEM 101 lecture before any CHEM 101 lab section", "output": {"constraints": [{"constraint_id": "c1", "type": "instructor_precedence", "entity_type": "instructor_course", "instructor_name": "Dr. Kim", "primary_course": "CHEM 101 Lecture", "secondary_course": "CHEM 101 Lab", "precedence_constraint": {"constraint_type": "PRECEDENCE", "instructor_specific": true, "same_instructor": true}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('PRECEDENCE')", "structure": "Progressive", "owner_id": "get_instructor_id('Dr. Kim')", "owner_type": 1}, "confidence": 0.98, "reasoning": "Instructor-specific teaching precedence requirement"}], "metadata": {"input_complexity": "instructor_precedence", "constraint_count": 1, "parsing_confidence": 0.98, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Music practice rooms must be soundproof and available for individual student use", "output": {"constraints": [{"constraint_id": "c1", "type": "room_feature", "entity_type": "room_type", "room_name": "Music Practice Room", "entity_id": null, "room_constraint": {"features_required": ["soundproof", "individual_access"], "room_type": "practice_room", "special_features": ["acoustic_treatment"]}, "preference_level": "R", "preference_code": -4, "database_table": "ROOM_FEATURE_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "room_feature_id": "get_room_feature('soundproof')", "room_type_id": "get_room_type('practice_room')", "owner_id": "get_department_id('Music')", "owner_type": 2}, "confidence": 0.97, "reasoning": "Essential acoustic requirements for music instruction"}], "metadata": {"input_complexity": "special_room_features", "constraint_count": 1, "parsing_confidence": 0.97, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "All senior seminars should be scheduled in the afternoon to avoid conflicts with morning required courses", "output": {"constraints": [{"constraint_id": "c1", "type": "time_allocation", "entity_type": "course_group", "course_group": "Senior Seminars", "entity_id": null, "temporal_constraint": {"period": "afternoon", "time_start": "13:00", "time_end": "18:00", "avoid_conflicts_with": "morning_required_courses"}, "preference_level": "F", "preference_code": 2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "time_pattern": "000000000000000000000000000111111111111111111111111100000000000000000000000000000000000000000000", "owner_id": "get_course_type_id('senior_seminar')", "owner_type": 5}, "confidence": 0.92, "reasoning": "Strategic scheduling to avoid student conflicts"}], "metadata": {"input_complexity": "course_group_timing", "constraint_count": 1, "parsing_confidence": 0.92, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Lab sessions must be at least 2 hours long and cannot be split across different days", "output": {"constraints": [{"constraint_id": "c1", "type": "duration_constraint", "entity_type": "course_type", "course_type": "Laboratory", "entity_id": null, "temporal_constraint": {"minimum_duration_minutes": 120, "continuous_session": true, "no_split_days": true}, "preference_level": "R", "preference_code": -4, "database_table": "CLASS_DURATION", "database_fields": {"class_type": "laboratory", "min_minutes_per_week": 120, "sessions_per_week": 1, "allow_split": false}, "confidence": 0.99, "reasoning": "Duration and continuity requirements for lab sessions"}], "metadata": {"input_complexity": "duration_constraint", "constraint_count": 1, "parsing_confidence": 0.99, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Graduate courses should be scheduled in late afternoon or evening to accommodate working students", "output": {"constraints": [{"constraint_id": "c1", "type": "time_preference", "entity_type": "course_level", "course_level": "Graduate", "entity_id": null, "temporal_constraint": {"preferred_periods": ["late_afternoon", "evening"], "time_start": "16:00", "time_end": "22:00", "accommodation_reason": "working_students"}, "preference_level": "F", "preference_code": 2, "database_table": "TIME_PREF", "database_fields": {"pref_level_id": "get_pref_level('F')", "time_pattern": "000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111", "owner_id": "get_course_level_id('graduate')", "owner_type": 6}, "confidence": 0.90, "reasoning": "Accommodation for student demographics and schedules"}], "metadata": {"input_complexity": "demographic_accommodation", "constraint_count": 1, "parsing_confidence": 0.90, "requires_disambiguation": false, "database_operations": 1}}}

{"instruction": "Extract scheduling constraints from the following academic timetabling request and format them as structured JSON for UniTime database insertion:", "input": "Physics and Chemistry departments cannot use the same lab equipment simultaneously", "output": {"constraints": [{"constraint_id": "c1", "type": "resource_conflict", "entity_type": "department_pair", "primary_department": "Physics", "secondary_department": "Chemistry", "resource_constraint": {"resource_type": "lab_equipment", "conflict_type": "exclusive_use", "simultaneous_use": false}, "preference_level": "R", "preference_code": -4, "database_table": "DISTRIBUTION_PREF", "database_fields": {"pref_level_id": "get_pref_level('R')", "dist_type_id": "get_distribution_type('DIFF_TIME')", "structure": "All Classes", "owner_id": "get_equipment_id('shared_lab_equipment')", "owner_type": 7}, "confidence": 0.96, "reasoning": "Resource exclusivity constraint between departments"}], "metadata": {"input_complexity": "resource_sharing_constraint", "constraint_count": 1, "parsing_confidence": 0.96, "requires_disambiguation": false, "database_operations": 1}}}